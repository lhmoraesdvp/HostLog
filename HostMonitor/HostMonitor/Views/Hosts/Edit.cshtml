@model HostMonitor.Models.Host

@{
    ViewBag.Title = "Editar";

    HostMonitor.Models.Db l = new HostMonitor.Models.Db();
    var j = l.Devices.Select(c => new { c.deviceId, c.deviceName }).ToList();
    var ja = l.centroDeCusto.Select(c => new { c.ccId, c.ccName }).ToList();
    List<Object> lst = new List<Object>
    {


    };
    List<Object> lsd = new List<Object>
    {


    };
    for (int i = 0; i < j.Count; i++)
    {
        lsd.Add(new { value = j[i].deviceId, text = j[i].deviceName });

    }

    for (int i = 0; i < ja.Count; i++)
    {
        lst.Add(new { value = ja[i].ccId, text = ja[i].ccName });

    }
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Host</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.hostId)

        <div class="form-group">
            @Html.Label("HostName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hostName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hostName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("IP", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hostIp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hostIp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de dispositivo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.hotDevice, new SelectList(lsd, "value", "text", 0))
            </div>
        </div>






        <div class="form-group">
            @Html.Label("Centro de custo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.hostCc, new SelectList(lst, "value", "text", 0))
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Serie", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hostSerial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hostSerial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Memoria (HD)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hostHdMemory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hostHdMemory, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.Label("RAM", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hostRam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hostRam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Processador", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hostProcessador, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hostProcessador, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.Label("MAC", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hostMac, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hostMac, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
