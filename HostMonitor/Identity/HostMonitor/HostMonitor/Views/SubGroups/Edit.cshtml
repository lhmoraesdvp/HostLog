@model HostMonitor.Models.SubGroup

@{
    ViewBag.Title = "Editar";

    HostMonitor.Models.Db l = new HostMonitor.Models.Db();
    var j = l.HostGroup.Select(c => c.groupName).ToList();
    var ja = l.HostGroup.Select(c => new { c.groupId, c.groupName }).ToList();
    List<Object> lst = new List<Object>
    {


    };

    for (int i = 0; i < j.Count; i++)
    {
        lst.Add(new { value = ja[i].groupId, text = ja[i].groupName });

    }

}

<h2>Editar Subgrupo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.Raw(Model.subgroupName)</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.subgId)

        <div class="form-group">
            @Html.Label("Nome", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.subgroupName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.subgroupName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Descrição", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.subgroupDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.subgroupDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Identificação", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.subgroupIdentity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.subgroupIdentity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Grupo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.sGroup, new SelectList(lst, "value", "text", 0))
                @*   @Html.ValidationMessageFor(model => model.sGroup, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
